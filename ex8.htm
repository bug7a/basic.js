<!DOCTYPE html>
<html>
    <head>
        
        <title>basic.js Code Editor</title>
        
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

        <!-- LIBRARY FILES -->
        <script src="library/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="basic/basic.min.css">
        <script src="basic/basic.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="js/basic-editor.js" type="text/javascript" charset="utf-8"></script>

        <style>

            body {
                overflow: hidden;
            }

            .editor {
                
                position:absolute;
                margin:0px;
                border-radius: 6px;
                font-size: 11px;
                
            }

        </style>

        <script>
            
        var start = function() {

            basicEditor.create(document.getElementById("code-example").innerHTML);

        }

        </script>

    </head>
    <body>
        
<div id="code-example" style="display:none">

    

    let boxGray;
    let boxRed;
    let boxOrange;
    
    // First running function.
    window.onload = () => {
        
        // BOX: Gray box. Parameters: (left, top, width, height, props)
        boxGray = Box(0, 0, 120, 120, {
            color: "lightgray",
        });
        that.center();

        // BOX: Red box.
        boxRed = Box(0, 0, 120, 120, {
            color: "orangered",
        });
        that.aline(boxGray, "right", 4);

        // BOX: Orange box.
        boxOrange = Box(0, 0, 40, 40, {
            color: "orange",
            round: 40,
            border: 6,
            borderColor: "rgba(0, 0, 0, 0.2)",
        });
        that.aline(boxGray, "bottom", 20, "center");

        page.onResize(pageResized);
        
    };
    
    const pageResized = () => {

        // Recalculate the position of the boxes.
        boxGray.center();
        boxRed.aline(boxGray, "right", 4);
        boxOrange.aline(boxGray, "bottom", 20, "center");

        // NOTE: .center() and .aline() methods calculate only when called.

    };
</div>
        
    </body>
</html>